// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Pulumiverse.Vra
{
    public static class Config
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly Pulumi.Config __config = new Pulumi.Config("vra");

        private static readonly __Value<string?> _accessToken = new __Value<string?>(() => __config.Get("accessToken") ?? Utilities.GetEnv("VRA_ACCESS_TOKEN"));
        /// <summary>
        /// The access token for API operations.
        /// </summary>
        public static string? AccessToken
        {
            get => _accessToken.Get();
            set => _accessToken.Set(value);
        }

        private static readonly __Value<bool?> _insecure = new __Value<bool?>(() => __config.GetBoolean("insecure") ?? Utilities.GetEnvBoolean("VRA_INSECURE", "VRA7_INSECURE"));
        /// <summary>
        /// Specify whether to validate TLS certificates.
        /// </summary>
        public static bool? Insecure
        {
            get => _insecure.Get();
            set => _insecure.Set(value);
        }

        private static readonly __Value<string?> _reauthorizeTimeout = new __Value<string?>(() => __config.Get("reauthorizeTimeout"));
        /// <summary>
        /// Specify timeout for how often to reauthorize the access token
        /// </summary>
        public static string? ReauthorizeTimeout
        {
            get => _reauthorizeTimeout.Get();
            set => _reauthorizeTimeout.Set(value);
        }

        private static readonly __Value<string?> _refreshToken = new __Value<string?>(() => __config.Get("refreshToken") ?? Utilities.GetEnv("VRA_REFRESH_TOKEN"));
        /// <summary>
        /// The refresh token for API operations.
        /// </summary>
        public static string? RefreshToken
        {
            get => _refreshToken.Get();
            set => _refreshToken.Set(value);
        }

        private static readonly __Value<string?> _url = new __Value<string?>(() => __config.Get("url") ?? Utilities.GetEnv("VRA_URL"));
        /// <summary>
        /// The base url for API operations.
        /// </summary>
        public static string? Url
        {
            get => _url.Get();
            set => _url.Set(value);
        }

    }
}
